plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
//	id 'com.gorylenko.gradle-git-properties' version '2.2.0'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'

}

group = 'com.web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
//	implementation 'org.springframework.session:spring-session-data-redis'
//	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'

//	implementation 'com.querydsl:querydsl-jpa'
//	implementation 'com.querydsl:querydsl-apt'
	compile("com.querydsl:querydsl-jpa")
	compile("com.querydsl:querydsl-apt")
//	compile("com.querydsl:querydsl-core")

}

test {
	useJUnitPlatform()
}


// queryDsl 적용
configurations {
	querydsl.extendsFrom compileClasspath
//	developmentOnly
//	runtimeClasspath {
//		extendsFrom developmentOnly
//	}
}
def querydslSrcDir = 'src/main/generated'
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}
querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

